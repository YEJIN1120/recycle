{"ast":null,"code":"var _jsxFileName = \"C:\\\\AIProject\\\\Front\\\\recycle\\\\src\\\\Router\\\\root.js\",\n  _s = $RefreshSig$();\nimport { Suspense, lazy } from \"react\";\nimport { useState } from \"react\";\n// const {createBrowserRouter} =require(\"react-router-dom\");\nimport { createBrowserRouter, RouterProvider, Navigate } from \"react-router-dom\";\n\n// // 로그아웃 시 상태 변경\n// const handleLogout = () => {\n//   sessionStorage.removeItem(\"jwtToken\");\n//   sessionStorage.removeItem(\"username\");\n//   setIsLoggedIn(false);\n//   sessionStorage.clear();\n\n//   console.log(\"logout\");\n// };\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function root() {\n  _s();\n  const Loading = /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Loading....\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 19\n  }, this);\n  const Home = /*#__PURE__*/lazy(() => import(\"../Pages/home\"));\n  const Login = /*#__PURE__*/lazy(() => import(\"../Pages/Login\"));\n  const SignUp = /*#__PURE__*/lazy(() => import(\"../Pages/SignUp\"));\n  const [isLoggedIn, setIsLoggedIn] = useState(!!sessionStorage.getItem(\"jwtToken\")); // 초기 로그인 상태\n\n  // 로그인 성공 시 상태 변경\n  const handleLoginSuccess = () => {\n    setIsLoggedIn(true);\n  };\n  const router = createBrowserRouter([{\n    path: \"\",\n    element: /*#__PURE__*/_jsxDEV(Suspense, {\n      fallback: Loading,\n      children: /*#__PURE__*/_jsxDEV(Home, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }, this)\n  }, {\n    path: \"login\",\n    element: /*#__PURE__*/_jsxDEV(Suspense, {\n      fallback: Loading,\n      children: isLoggedIn ? /*#__PURE__*/_jsxDEV(Navigate, {\n        to: \"/\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 25\n      }, this) : /*#__PURE__*/_jsxDEV(Login, {\n        onLoginSuccess: handleLoginSuccess\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 47\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }, this)\n  }, {\n    path: \"signup\",\n    element: /*#__PURE__*/_jsxDEV(Suspense, {\n      fallback: Loading,\n      children: /*#__PURE__*/_jsxDEV(SignUp, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }, this)\n  }]);\n  return /*#__PURE__*/_jsxDEV(RouterProvider, {\n    router: router\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 10\n  }, this);\n}\n_s(root, \"SqWDmI0OROWWz8ihw8dxAVP2Ehs=\");","map":{"version":3,"names":["Suspense","lazy","useState","createBrowserRouter","RouterProvider","Navigate","jsxDEV","_jsxDEV","root","_s","Loading","children","fileName","_jsxFileName","lineNumber","columnNumber","Home","Login","SignUp","isLoggedIn","setIsLoggedIn","sessionStorage","getItem","handleLoginSuccess","router","path","element","fallback","to","onLoginSuccess"],"sources":["C:/AIProject/Front/recycle/src/Router/root.js"],"sourcesContent":["import { Suspense, lazy } from \"react\";\r\nimport { useState } from \"react\";\r\n// const {createBrowserRouter} =require(\"react-router-dom\");\r\nimport { createBrowserRouter, RouterProvider, Navigate } from \"react-router-dom\";\r\n\r\n\r\n\r\n// // 로그아웃 시 상태 변경\r\n// const handleLogout = () => {\r\n//   sessionStorage.removeItem(\"jwtToken\");\r\n//   sessionStorage.removeItem(\"username\");\r\n//   setIsLoggedIn(false);\r\n//   sessionStorage.clear();\r\n\r\n//   console.log(\"logout\");\r\n// };\r\n\r\nexport default function root() {\r\n  const Loading = <div>Loading....</div>\r\n  const Home = lazy(() => import(\"../Pages/home\"))\r\n  const Login = lazy(() => import(\"../Pages/Login\"))\r\n  const SignUp = lazy(() => import(\"../Pages/SignUp\"))\r\n\r\n\r\n  const [isLoggedIn, setIsLoggedIn] = useState(!!sessionStorage.getItem(\"jwtToken\")); // 초기 로그인 상태\r\n\r\n  // 로그인 성공 시 상태 변경\r\n  const handleLoginSuccess = () => {\r\n    setIsLoggedIn(true);\r\n  }\r\n\r\n  const router = createBrowserRouter([\r\n    {\r\n      path: \"\",\r\n      element:\r\n        <Suspense fallback={Loading}>\r\n          <Home />\r\n        </Suspense>\r\n    },\r\n    {\r\n      path: \"login\",\r\n      element:\r\n        <Suspense fallback={Loading}>\r\n          {isLoggedIn ? <Navigate to=\"/\" /> : <Login onLoginSuccess={handleLoginSuccess} />}\r\n        </Suspense>\r\n    },\r\n    {\r\n      path: \"signup\",\r\n      element:\r\n        <Suspense fallback={Loading}>\r\n          <SignUp />\r\n        </Suspense>\r\n    }\r\n  ])\r\n\r\n  return <RouterProvider router={router} />;\r\n}"],"mappings":";;AAAA,SAASA,QAAQ,EAAEC,IAAI,QAAQ,OAAO;AACtC,SAASC,QAAQ,QAAQ,OAAO;AAChC;AACA,SAASC,mBAAmB,EAAEC,cAAc,EAAEC,QAAQ,QAAQ,kBAAkB;;AAIhF;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEA,eAAe,SAASC,IAAIA,CAAA,EAAG;EAAAC,EAAA;EAC7B,MAAMC,OAAO,gBAAGH,OAAA;IAAAI,QAAA,EAAK;EAAW;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAK,CAAC;EACtC,MAAMC,IAAI,gBAAGf,IAAI,CAAC,MAAM,MAAM,CAAC,eAAe,CAAC,CAAC;EAChD,MAAMgB,KAAK,gBAAGhB,IAAI,CAAC,MAAM,MAAM,CAAC,gBAAgB,CAAC,CAAC;EAClD,MAAMiB,MAAM,gBAAGjB,IAAI,CAAC,MAAM,MAAM,CAAC,iBAAiB,CAAC,CAAC;EAGpD,MAAM,CAACkB,UAAU,EAAEC,aAAa,CAAC,GAAGlB,QAAQ,CAAC,CAAC,CAACmB,cAAc,CAACC,OAAO,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC;;EAEpF;EACA,MAAMC,kBAAkB,GAAGA,CAAA,KAAM;IAC/BH,aAAa,CAAC,IAAI,CAAC;EACrB,CAAC;EAED,MAAMI,MAAM,GAAGrB,mBAAmB,CAAC,CACjC;IACEsB,IAAI,EAAE,EAAE;IACRC,OAAO,eACLnB,OAAA,CAACP,QAAQ;MAAC2B,QAAQ,EAAEjB,OAAQ;MAAAC,QAAA,eAC1BJ,OAAA,CAACS,IAAI;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA;EACd,CAAC,EACD;IACEU,IAAI,EAAE,OAAO;IACbC,OAAO,eACLnB,OAAA,CAACP,QAAQ;MAAC2B,QAAQ,EAAEjB,OAAQ;MAAAC,QAAA,EACzBQ,UAAU,gBAAGZ,OAAA,CAACF,QAAQ;QAACuB,EAAE,EAAC;MAAG;QAAAhB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,gBAAGR,OAAA,CAACU,KAAK;QAACY,cAAc,EAAEN;MAAmB;QAAAX,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACzE;EACd,CAAC,EACD;IACEU,IAAI,EAAE,QAAQ;IACdC,OAAO,eACLnB,OAAA,CAACP,QAAQ;MAAC2B,QAAQ,EAAEjB,OAAQ;MAAAC,QAAA,eAC1BJ,OAAA,CAACW,MAAM;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF;EACd,CAAC,CACF,CAAC;EAEF,oBAAOR,OAAA,CAACH,cAAc;IAACoB,MAAM,EAAEA;EAAO;IAAAZ,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AAC3C;AAACN,EAAA,CAvCuBD,IAAI","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}